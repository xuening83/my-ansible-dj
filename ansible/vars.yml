---
# a unix path-friendly name (IE, no spaces or special characters)
project_name: demo-api

# the base path to install to. You should not need to change this.
install_root: /opt/xuening

virtualenv_path: "{{ install_root }}/{{ project_name }}/venv"
# the python module path to your project's wsgi file. E.g. for a directory
# layout like this (assuming `django_hello` is the project_name and top level
# directory name):
# django_hello
# ├── hello
# │   ├── apps
# │   ├── __init__.py
# │   ├── settings.py
# │   ├── urls.py
# │   └── wsgi.py
# ├── manage.py
# └── requirements.txt
# the correct wsgi_module value would be `hello.wsgi`
wsgi_module: settings.wsgi

# any directories that need to be added to the PYTHONPATH.
pythonpath: "{{ install_root }}/{{ project_name }}/settings"


application_log_dir: "/var/log/{{ project_name }}"
application_log_file: "/var/log/{{ project_name }}/gunicorn_supervisor.log"

# the git repository URL for the project
# project_repo: git@github.com:technivore/django-hello-world.git

# a private key that has access to the repository URL
# ssh_private_key: ~/.ssh/id_rsa


# SCP variables
ec2user: "ec2-user"
ec2host: "52.32.223.177"
local_dir: "/Users/xuening/WorkDir/scoredata/{{ project_name }}"
idfile: "/Users/xuening/.ssh/dev-sectest3.pem"

# The value of your django project's STATIC_ROOT settings.
# This will be the directory that django's `collectstatic` management command
# copies static files to, and it must be an absolute path. The default value
# here assumes that STATIC_ROOT is set in your settings.py like so:
# STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
static_root: "{{ install_root }}/{{ project_name }}/staticfiles"

# the dns name or names (space separated) for your server
# server_name: django-hello.com www.django-hello.com

# database setup. Note that because this playbook doesn't touch the default
# postgres pg_hba.conf file, we use local password-based authentication for
# postgres and thus you need to provide a username and password, and your
# settings.py MUST set "localhost" or "127.0.0.1" as the HOST value. For
# example, the default settings here assume the following values in
# settings.py:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'HOST': 'localhost',
#         'NAME': 'hello',
#         'USER': 'hello',
#         'PASSWORD': 'changeme',
#     }
# }
db_name: demo-api
db_user: root
db_password: scoredata1234

# apt packages, you should not need to change this unless you have packages
# listed in your requirements.txt that depend on system packages.
system_packages:
  - git
  - nginx
  - python-pip
  - python27

# vim:ft=ansible:


# Application settings.
django_settings_file: "settings.setting"
django_secret_key: "akr2icmg1n8%z^3fe3c+)5d0(t^cy-2_25rrl35a7@!scna^1#"

# Django Environment variables
django_environment:
  DJANGO_SETTINGS_MODULE: "{{ django_settings_file }}"
  DJANGO_SECRET_KEY: "{{ django_secret_key }}"
